// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
	DMux8Way(in = load, sel[0] = address[0], sel[1] = address[1], sel[2] = address[2], a = a, b = b, c = c, d = d, e = 	e, f = f, g = g, h = h);
	Register(in = in, load = a, out = w0);
	Register(in = in, load = b, out = w1);
	Register(in = in, load = c, out = w2);
	Register(in = in, load = d, out = w3);
	Register(in = in, load = e, out = w4);
	Register(in = in, load = f, out = w5);
	Register(in = in, load = g, out = w6);
	Register(in = in, load = h, out = w7);
	Mux8Way16(a = w0, b = w1, c = w2, d = w3, e = w4, f = w5, g = w6, h = w7, sel[0] = address[0], sel[1] = address[1], sel[2] = address[2], out = out);
}